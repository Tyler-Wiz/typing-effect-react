{"ast":null,"code":"var _jsxFileName = \"/Users/tylerhome/Desktop/Typing/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst words = [\"Developer\", \"Programmer\"];\n\nfunction App() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [blink, setBlink] = useState(true);\n  const [reverse, setReverse] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${words[index].substring(0, subIndex)}${blink ? \"|\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"I1KjqGN14dSxJiUk73P2JeXIguA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerhome/Desktop/Typing/src/App.jsx"],"names":["React","useState","useEffect","words","App","index","setIndex","subIndex","setSubIndex","blink","setBlink","reverse","setReverse","substring"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAQ,WAAR;;;AAEA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACF,sBACE;AAAA,2BACE;AAAA,gBACI,GAAEE,KAAK,CAACE,KAAD,CAAL,CAAaQ,SAAb,CAAuB,CAAvB,EAA0BN,QAA1B,CAAoC,GAAEE,KAAK,GAAG,GAAH,GAAS,EAAG;AAD7D;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAMC;;GAXQL,G;;KAAAA,G;AAaT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport  './App.css'\n\nconst words = [\"Developer\", \"Programmer\"];\n\nfunction App() {\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [blink, setBlink] = useState(true); \n  const [reverse, setReverse] = useState(false);\nreturn (\n  <>\n    <h1>\n      {`${words[index].substring(0, subIndex)}${blink ? \"|\" : \"\"}`}\n    </h1>\n  </>)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}