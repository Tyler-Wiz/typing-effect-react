{"ast":null,"code":"var _jsxFileName = \"/Users/tylerhome/Desktop/Typing/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst words = [\"Developer\", \"Programmer.\"];\nexport default function Home() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [blink, setBlink] = useState(true);\n  const [reverse, setReverse] = useState(false); // typeWriter\n\n  useEffect(() => {\n    if (index === words.length) return;\n\n    if (subIndex === words[index].length + 1 && index !== words.length - 1 && !reverse) {\n      setReverse(true);\n      return;\n    }\n\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      setIndex(prev => prev + 1);\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      setSubIndex(prev => prev + (reverse ? -1 : 1));\n    }, Math.max(reverse ? 75 : subIndex === words[index].length ? 1000 : 150, parseInt(Math.random() * 350)));\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse]); // blinker\n\n  useEffect(() => {\n    const timeout2 = setTimeout(() => {\n      setBlink(prev => !prev);\n    }, 500);\n    return () => clearTimeout(timeout2);\n  }, [blink]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The \", `${words[index].substring(0, subIndex)}${blink ? \"|\" : \" \"}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"pleVZOqAINqo9ZUREidTLgR+xD4=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tylerhome/Desktop/Typing/src/App.jsx"],"names":["React","useState","useEffect","words","Home","index","setIndex","subIndex","setSubIndex","blink","setBlink","reverse","setReverse","length","prev","timeout","setTimeout","Math","max","parseInt","random","clearTimeout","timeout2","substring"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAQ,WAAR;;;AAEA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,aAAd,CAAd;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC,CAJ6B,CAM7B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,KAAKF,KAAK,CAACU,MAApB,EAA4B;;AAE5B,QAAKN,QAAQ,KAAKJ,KAAK,CAACE,KAAD,CAAL,CAAaQ,MAAb,GAAsB,CAAnC,IACDR,KAAK,KAAKF,KAAK,CAACU,MAAN,GAAe,CADxB,IAC6B,CAACF,OADnC,EAC6C;AAC3CC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AAED,QAAIL,QAAQ,KAAK,CAAb,IAAkBI,OAAtB,EAA+B;AAC7BC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,QAAQ,CAAEQ,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAR;AACA;AACD;;AAED,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BR,MAAAA,WAAW,CAAEM,IAAD,IAAUA,IAAI,IAAIH,OAAO,GAAG,CAAC,CAAJ,GAAQ,CAAnB,CAAf,CAAX;AACD,KAFyB,EAEvBM,IAAI,CAACC,GAAL,CAASP,OAAO,GAAG,EAAH,GAAQJ,QAAQ,KAAKJ,KAAK,CAACE,KAAD,CAAL,CAAaQ,MAA1B,GAAmC,IAAnC,GACf,GADT,EACcM,QAAQ,CAACF,IAAI,CAACG,MAAL,KAAgB,GAAjB,CADtB,CAFuB,CAA1B;AAKA,WAAO,MAAMC,YAAY,CAACN,OAAD,CAAzB;AACD,GArBQ,EAqBN,CAACR,QAAD,EAAWF,KAAX,EAAkBM,OAAlB,CArBM,CAAT,CAP6B,CA8B7B;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,QAAQ,GAAGN,UAAU,CAAC,MAAM;AAChCN,MAAAA,QAAQ,CAAEI,IAAD,IAAU,CAACA,IAAZ,CAAR;AACD,KAF0B,EAExB,GAFwB,CAA3B;AAGA,WAAO,MAAMO,YAAY,CAACC,QAAD,CAAzB;AACD,GALQ,EAKN,CAACb,KAAD,CALM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAA,yBACQ,GAAEN,KAAK,CAACE,KAAD,CAAL,CAAakB,SAAb,CAAuB,CAAvB,EAA0BhB,QAA1B,CAAoC,GAAEE,KAAK,GAAG,GAAH,GAAS,GAAI,EADlE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GA7CuBL,I;;KAAAA,I","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport  './App.css'\n\nconst words = [\"Developer\", \"Programmer.\"];\n\nexport default function Home() {\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [blink, setBlink] = useState(true);\n  const [reverse, setReverse] = useState(false);\n\n  // typeWriter\n  useEffect(() => {\n    if (index === words.length) return;\n\n    if ( subIndex === words[index].length + 1 && \n        index !== words.length - 1 && !reverse ) {\n      setReverse(true);\n      return;\n    }\n\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      setIndex((prev) => prev + 1);\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      setSubIndex((prev) => prev + (reverse ? -1 : 1));\n    }, Math.max(reverse ? 75 : subIndex === words[index].length ? 1000 :\n                150, parseInt(Math.random() * 350)));\n\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse]);\n\n  // blinker\n  useEffect(() => {\n    const timeout2 = setTimeout(() => {\n      setBlink((prev) => !prev);\n    }, 500);\n    return () => clearTimeout(timeout2);\n  }, [blink]);\n\n  return (\n    <>\n      <h1>\n        The {`${words[index].substring(0, subIndex)}${blink ? \"|\" : \" \"}`}\n      </h1>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}